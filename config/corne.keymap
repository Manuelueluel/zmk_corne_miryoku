/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define LWR 1   //base_layer
#define MED 2   //med_layer
#define NAV 3   //nav_layer
#define MOU 4   //mou_layer
#define SYM 5   //sym_layer 
#define NUM 6   //num_layer
#define FUN 7   //fun_layer

// tutti i led trattati come unica stringa led
&led_strip {
    chain-length = <27>;
};

//| GUI | LWR | SPC |   | ENT | RSE  | ALT |
//&mo 1

/ {
        //Definitions of homerow mods
        behaviors {
                hm: homerow_tap_preferred_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

                base_layer {
// -----------------------------------------------------------------------------------------
// | xxx |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | xxx |
// | xxx |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | xxx |
// | xxx |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | xxx |
//                   | ESC | LWR | SPC |   | ENT | BSPC | DEL |
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T       &kp Y &kp U  &kp I     &kp O   &kp P        &none
   &none &hm LGUI A &kp S &kp D &kp F &kp G       &kp H &kp J  &kp K     &kp L   &kp SEMI     &none
   &none &kp Z &kp X &kp C &kp V &kp B       &kp N &kp M  &kp COMMA &kp DOT &kp IT_MINUS &none
                &kp ESC &kp SPC &kp TAB      &kp RET &kp BSPC &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | xxx |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | xxx |
// | xxx | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     | xxx |
// | xxx |     |     |     |     |     |   |     |     |     |     |     | xxx |
//                   | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8   &kp N9    &kp N0 &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans &none
   &none &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans   &trans    &trans &none
                                   &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | xxx |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | xxx |
// | xxx |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  | xxx |
// | xxx |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | xxx |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &none &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &none
   &none &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &none
   &none &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &none
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
