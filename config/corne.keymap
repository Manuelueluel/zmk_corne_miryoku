/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0          //base_layer
#define MED 1           //med_layer
#define NAV 2           //nav_layer
#define SYM 3           //sym_layer 
#define ACCSYM 4        //accsym_layer
#define NUM 5           //num_layer
#define FUN 6           //fun_layer
#define BLRGB 7         //blrgb_layer

// tutti i led trattati come unica stringa led
&led_strip {
    chain-length = <27>;
};

/ {
        //Definitions of homerow mods
        behaviors {
                hm: homerow_tap_preferred_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
        };

        //To access bluetooth and rgb layer hold ESC + SPC
        combos {
                compatible = "zmk,combos";
                        // two left-most thumb keys => blrgb_layer
                combo_numpad {  
                        timeout-ms = <300>;
                        key-positions = <36 37>;
                        bindings = <&mo BLRGB>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                base_layer {
// -----------------------------------------------------------------------------------------
// | xxx |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | xxx |
// | xxx |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | xxx |
// | xxx |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | xxx |
//                   | ESC | SPC | TAB |   | ENT | BSPC | DEL |
                        bindings = <
   &none &kp Q      &kp W      &kp E       &kp R       &kp T        &kp Y &kp U       &kp I        &kp O      &kp P         &none
   &none &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G        &kp H &hm RSHFT J &hm RCTRL K  &hm RALT L &hm LGUI IT_SEMI &none
   &none &kp Z      &kp X      &kp C       &kp V       &kp B        &kp N &kp M       &kp COMMA    &kp DOT    &kp IT_MINUS  &none
                               &lt MED ESC &lt NAV SPC &lt SYM TAB  &lt ACCSYM RET    &lt NUM BSPC &lt FUN DEL
                        >;
                };

                med_layer {
// -----------------------------------------------------------------------------------------
// | xxx |     |     |     |     |     |    | BT1    | BT2    | BT3      | BT4      | BT5  | xxx |
// | xxx |     |     |     |     |     |    |        | K_PREV | K_VOL_DN | K_VOL_UP | C_FF | xxx |
// | xxx |     |     |     |     |     |    |        |        |          |          |      | xxx |
//                   | ESC | MED | SPC |    | K_STOP | K_PP   | K_MUTE   |
                        bindings = <
   &none &trans &trans &trans  &trans  &trans    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
   &none &trans &trans &trans  &trans  &trans    &trans       &kp K_PREV   &kp K_VOL_DN &kp K_VOL_UP &kp C_FF     &none
   &none &trans &trans &trans  &trans  &trans    &trans       &trans       &trans       &trans       &trans       &none
                       &kp ESC &kp SPC &kp TAB   &kp K_STOP   &kp K_PP     &kp K_MUTE
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | xxx |     |     |     |     |     |   | Copy   | Paste |  UP   | Redo  | Undo | xxx |
// | xxx |     |     |     |     |     |   | Caps   | LEFT  | DOWN  | RIGHT | Cut  | xxx |
// | xxx |     |     |     |     |     |   | Insert | Home  | Pg Dn | Pg Up | End  | xxx |
//                   | ESC | SPC | TAB |   | ENT    | BSPC  | DEL   |
                        bindings = <
   &none &trans &trans &trans   &trans &trans     &kp LC(C)  &kp LC(V) &kp UP     &kp LC(Y) &kp LC(Z) &none
   &none &trans &trans &trans   &trans &trans     &kp CAPS   &kp LEFT  &kp DOWN   &kp RIGHT &kp LC(X)  &none
   &none &trans &trans &trans   &trans &trans     &kp INSERT &kp HOME  &kp PG_DN  &kp PG_UP &kp END   &none
                       &kp LGUI &trans &kp SPACE  &kp RET    &kp BSPC  &kp DEL
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// | xxx |     |     |     |     |     |    |  &  |  (   |  )   |  =  |  ?  | xxx |
// | xxx |     |     |     |     |     |    |  |  |  [   |  ]   |  /  |  \  | xxx |
// | xxx |     |     |     |     |     |    |  ^  |  {   |  }   |  @  |  #  | xxx |
//                   | ESC | SPC | TAB |    | ENT | BSPC | DEL  |         
                        bindings = <
   &none &trans &trans &trans   &trans  &trans     &kp IT_AND   &kp IT_LPAR &kp IT_RPAR &kp IT_EQL &kp IT_QUES  &none
   &none &trans &trans &trans   &trans  &trans     &kp IT_PIPE  &kp IT_LBKT &kp IT_RBKT &kp IT_FSLH &kp IT_BSLH &none
   &none &trans &trans &trans   &trans  &trans     &kp IT_CARET &kp IT_LBRC &kp IT_RBRC &kp IT_AT &kp IT_HASH &none
                       &kp LGUI &kp SPC &kp TAB    &kp RET      &kp BSPC    &kp DEL
                        >;
                };

                accsym_layer {
// -----------------------------------------------------------------------------------------
// | xxx |  !  | ` " |  £  |  $  |  %  |    |     |     |     |     |     | xxx |
// | xxx |  ì  |  é  |  è  |  ù  |  à  |    |     |     |     |     |     | xxx |
// | xxx |  <  |  >  |  °  |  ~  |  ò  |    |     |     |     |     |     | xxx |
//                   | ESC | SPC | TAB |    | ENT | BSPC | DEL  |         
                        bindings = <
   &none &kp EXCL    &mt IT_BKTK IT_DQUOT &kp IT_PND  &kp DLLR     &kp PRCNT   &trans  &trans   &trans &trans &trans &none
   &none &kp IT_IGRV &kp IT_EACU          &kp IT_EGRV &kp IT_UGRV  &kp IT_AGRV &trans  &trans   &trans &trans &trans &none
   &none &kp IT_LESS &kp IT_GREAT         &kp IT_DEG  &kp IT_TILDE &kp IT_OGRV &trans  &trans   &trans &trans &trans &none
                                          &kp LGUI    &kp SPC      &kp TAB     &kp RET &kp BSPC &kp DEL
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// | xxx |  (  |  7  |  8  |  9  |  )  |    |     |     |     |     |     | xxx |
// | xxx |     |  4  |  5  |  6  |  *  |    |     |     |     |     |     | xxx |
// | xxx |     |  1  |  2  |  3  |  /  |    |     |     |     |     |     | xxx |
//                   | +   |  0  |  -  |    | ENT | BSPC | DEL  |         
                        bindings = <
   &none &kp IT_LPAR &kp N7 &kp N8      &kp N9 &kp IT_RPAR        &trans  &trans   &trans &trans &trans &none
   &none &trans      &kp N4 &kp N5      &kp N6 &kp KP_MULTIPLY    &trans  &trans   &trans &trans &trans &none
   &none &trans      &kp N1 &kp N2      &kp N3 &kp IT_FSLH        &trans  &trans   &trans &trans &trans &none
                            &kp IT_PLUS &kp N0 &kp IT_MINUS       &kp RET &kp BSPC &kp DEL
                        >;
                };

                fun_layer {
// -----------------------------------------------------------------------------------------
// | xxx | F12 | F7  | F8  | F9  | PrtScr      |    |     |     |     |     |     | xxx |
// | xxx | F11 | F4  | F5  | F6  | Scrl lck    |    |     |     |     |     |     | xxx |
// | xxx | F10 | F1  | F2  | F3  | Pause/Break |    |     |     |     |     |     | xxx |
//                   |     |     |             |    | ENT | BSPC | DEL  |         
                        bindings = <
   &none &kp F12  &kp F7 &kp F8 &kp F9 &kp PSCRN         &trans  &trans   &trans &trans &trans &none
   &none &kp F11  &kp F4 &kp F5 &kp F6 &kp SLCK          &trans  &trans   &trans &trans &trans &none
   &none &kp F10  &kp F1 &kp F2 &kp F3 &kp PAUSE_BREAK   &trans  &trans   &trans &trans &trans &none
                         &trans &trans &trans            &kp RET &kp BSPC &kp DEL
                        >;
                };

                blrgb_layer {
// -----------------------------------------------------------------------------------------
// | xxx |     |     |     |     |     |    | RGB_EFF | RGB BRI+ | RGB_HUI | BT_SEL 0 |          | xxx |
// | xxx |     |     |     |     |     |    | RGB TOG | RGB_BRI- | RGB_HUD | BT_SEL 1 | BT_SEL 4 | xxx |
// | xxx |     |     |     |     |     |    | RGB_SAI | RGB_SPI  |         | BT_SEL 2 | BT_SEL 5 | xxx |
//                   |     |     |     |    | RGB_SAD | RGB_SPD  | BTCLR   |         
                        bindings = <
   &none &kp F12  &kp F7 &kp F8 &kp F9 &kp PSCRN         &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_HUI &bt BT_SEL 0 &none        &none
   &none &kp F11  &kp F4 &kp F5 &kp F6 &kp SLCK          &rgb_ug RGB_TOG &rgb_ug RGB_BRD &rgb_ug RGB_HUD &bt BT_SEL 1 &bt BT_SEL 3 &none
   &none &kp F10  &kp F1 &kp F2 &kp F3 &kp PAUSE_BREAK   &rgb_ug RGB_SAI &rgb_ug RGB_SPI &trans          &bt BT_SEL 2 &bt BT_SEL 4 &none
                         &trans &trans &trans            &rgb_ug RGB_SAD &rgb_ug RGB_SPD &bt BT_CLR
                        >;
                };

        };
};